// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ashchippy

//@version=5
indicator("多级别彩虹图指标/策略", overlay = true)
// strategy("多级别彩虹图指标/策略", overlay = true)

mode = input.string(defval='User Defined', title='Mode', options=['Auto', 'User Defined'])
smoothing = input.string(defval='VWMA', title='Smoothing', options=['SMA', 'EMA', 'RMA', 'WMA', 'VWMA', 'HMA'])
length = input.int(200, minval=1, title='Length')

// src = input(title="当前价格", defval=close)


HTFp = timeframe.period == '1' ? 60 : timeframe.period == '3' ? 20 : timeframe.period == '5' ? 48 : timeframe.period == '15' ? 96 : timeframe.period == '30' ? 48 : timeframe.period == '45' ? 32 : timeframe.period == '60' ? 24 : timeframe.period == '120' ? 84 : timeframe.period == '180' ? 56 : timeframe.period == '240' ? 42 : timeframe.period == 'D' ? 30 : timeframe.period == 'W' ? 52 : 12


len = mode == 'Auto' ? HTFp : length

ma_function(source, length) =>
    if smoothing == 'SMA'
        ta.sma(source, len)
    else
        if smoothing == 'EMA'
            ta.ema(source, len)
        else
            if smoothing == 'RMA'
                ta.rma(source, len)
            else
                if smoothing == 'WMA'
                    ta.wma(source, len)
                else
                    if smoothing == 'VWMA'
                        ta.vwma(source, len)
                    else
                        ta.hma(source, len)


x1 = input.float(10, '1', minval=-3000, maxval=3000, group = "系数设置")
x2 = input.float(7.3, '2', minval=-3000, maxval=3000, group = "系数设置")
x3 = input.float(5, '3', minval=-3000, maxval=3000, group = "系数设置")
x4 = input.float(3.65, '4', minval=-3000, maxval=3000, group = "系数设置")
x6 = input.float(-3.65, '6', minval=-3000, maxval=3000, group = "系数设置")
x7 = input.float(-5, '7', minval=-3000, maxval=3000, group = "系数设置")
x8 = input.float(-7.3, '8', minval=-3000, maxval=3000, group = "系数设置")
x9 = input.float(-10, '9', minval=-3000, maxval=3000, group = "系数设置")



enable1 = input.bool(true, '1', group = "信号使能")
enable2 = input.bool(true, '2', group = "信号使能")
enable3 = input.bool(true, '3', group = "信号使能")
enable4 = input.bool(false, '4', group = "信号使能")
enable6 = input.bool(false, '6', group = "信号使能")
enable7 = input.bool(true, '7', group = "信号使能")
enable8 = input.bool(true, '8', group = "信号使能")
enable9 = input.bool(true, '9', group = "信号使能")



// 拿到 高点和低点
serie1 = close > open ? close : close < open ? open : high
// 如果是绿线,  就拿到 close,  如果是红线,  就拿到 open,  如果 open == close, 就拿到 高点, 总之, 拿到高点
serie2 = close < open ? close : close > open ? open : low
// 拿到低点

// 计算初版line
line1 = ma_function(serie2, len) + x1 * ma_function(ta.tr(true), len)    // 1
line2 = ma_function(serie2, len) + x2 * ma_function(ta.tr(true), len)  // 2
line3 = ma_function(serie2, len) + x3 * ma_function(ta.tr(true), len)   // 3
line4 = ma_function(serie2, len) + x4 * ma_function(ta.tr(true), len)  // 4
line5 = ma_function(hlc3, len)
line6 = ma_function(serie1, len) + x6 * ma_function(ta.tr(true), len)  // 6
line7 = ma_function(serie1, len) + x7 * ma_function(ta.tr(true), len)  // 7
line8 = ma_function(serie1, len) + x8 * ma_function(ta.tr(true), len)  // 8
line9 = ma_function(serie1, len) + x9 * ma_function(ta.tr(true), len)  // 9





// 主 周期 的 线
currect_period = input.string("10", "主-彩虹线周期 (分钟)", group = "主周期彩虹图")
current_enable = input.bool(true, "主周期_使能", group = "主周期彩虹图")
current_c = input.color(color.black, "主周期彩虹图颜色", group = "主周期彩虹图")


currect_line1 = request.security(syminfo.tickerid, currect_period, line1)
currect_line2 = request.security(syminfo.tickerid, currect_period, line2)
currect_line3 = request.security(syminfo.tickerid, currect_period, line3)
currect_line4 = request.security(syminfo.tickerid, currect_period, line4)
// currect_line5 = request.security(syminfo.tickerid, currect_period, line5)
currect_line6 = request.security(syminfo.tickerid, currect_period, line6)
currect_line7 = request.security(syminfo.tickerid, currect_period, line7)
currect_line8 = request.security(syminfo.tickerid, currect_period, line8)
currect_line9 = request.security(syminfo.tickerid, currect_period, line9)

plot(currect_line1, color = current_enable ? current_c : na, title = "line1")
plot(currect_line2, color = current_enable ? current_c : na, title = "line2")
plot(currect_line3, color = current_enable ? current_c : na, title = "line3")
plot(currect_line4, color = current_enable ? current_c : na, title = "line4")
// plot(currect_line5, color = current_enable ? current_c : na, title = "line5")
plot(currect_line6, color = current_enable ? current_c : na, title = "line6")
plot(currect_line7, color = current_enable ? current_c : na, title = "line7")
plot(currect_line8, color = current_enable ? current_c : na, title = "line8")
plot(currect_line9, color = current_enable ? current_c : na, title = "line9")



// 额外 周期 的线

period1 = input.string("15", "额外1-彩虹线周期 (分钟)", group = "额外周期彩虹图")
period1_enable = input.bool(true, "额外1_使能", group = "额外周期彩虹图")
period1_c = input.color(color.aqua, "额外1_彩虹图颜色", group = "额外周期彩虹图")

period1_line1 = request.security(syminfo.tickerid, period1, line1)
period1_line2 = request.security(syminfo.tickerid, period1, line2)
period1_line3 = request.security(syminfo.tickerid, period1, line3)
period1_line4 = request.security(syminfo.tickerid, period1, line4)
// period1_line5 = request.security(syminfo.tickerid, period1, line5)
period1_line6 = request.security(syminfo.tickerid, period1, line6)
period1_line7 = request.security(syminfo.tickerid, period1, line7)
period1_line8 = request.security(syminfo.tickerid, period1, line8)
period1_line9 = request.security(syminfo.tickerid, period1, line9)

plot(period1_line1, color = period1_enable? period1_c : na, title = "period1_line1")
plot(period1_line2, color = period1_enable? period1_c : na, title = "period1_line2")
plot(period1_line3, color = period1_enable? period1_c : na, title = "period1_line3")
plot(period1_line4, color = period1_enable? period1_c : na, title = "period1_line4")
// plot(period1_line5, color = period1_enable? period1_c : na, title = "period1_line5")
plot(period1_line6, color = period1_enable? period1_c : na, title = "period1_line6")
plot(period1_line7, color = period1_enable? period1_c : na, title = "period1_line7")
plot(period1_line8, color = period1_enable? period1_c : na, title = "period1_line8")
plot(period1_line9, color = period1_enable? period1_c : na, title = "period1_line9")




period2 = input.string("30", "额外2-彩虹线周期 (分钟)", group = "额外周期彩虹图")
period2_enable = input.bool(true, "额外2_使能", group = "额外周期彩虹图")
period2_c = input.color(color.red, "额外2_彩虹图颜色", group = "额外周期彩虹图")


// period2_line1 = request.security(syminfo.tickerid, period2, line1)
period2_line2 = request.security(syminfo.tickerid, period2, line2)
period2_line3 = request.security(syminfo.tickerid, period2, line3)
period2_line4 = request.security(syminfo.tickerid, period2, line4)
// period2_line5 = request.security(syminfo.tickerid, period2, line5)
period2_line6 = request.security(syminfo.tickerid, period2, line6)
period2_line7 = request.security(syminfo.tickerid, period2, line7)
period2_line8 = request.security(syminfo.tickerid, period2, line8)
// period2_line9 = request.security(syminfo.tickerid, period2, line9)

// plot(period2_line1, color = period2_enable? period2_c : na, title = "period2_line1")
plot(period2_line2, color = period2_enable? period2_c : na, title = "period2_line2")
plot(period2_line3, color = period2_enable? period2_c : na, title = "period2_line3")
plot(period2_line4, color = period2_enable? period2_c : na, title = "period2_line4")
// plot(period2_line5, color = period2_enable? period2_c : na, title = "period2_line5")
plot(period2_line6, color = period2_enable? period2_c : na, title = "period2_line6")
plot(period2_line7, color = period2_enable? period2_c : na, title = "period2_line7")
plot(period2_line8, color = period2_enable? period2_c : na, title = "period2_line8")
// plot(period2_line9, color = period2_enable? period2_c : na, title = "period2_line9")



// 超出了 series 的 最大限制, 所以 没有 额外的 第三条线




// 下面开始 绘制信号

// close 上穿 1
// crossover1 = ta.crossover(high, currect_line1) and enable1 and (period1_enable ? (high  >= period1_line1) : true )  and (period2_enable ? (high  >= period2_line1) : true ) 

// close 上穿 2
crossover2 = ta.crossover(high, currect_line2) and enable2 and (period1_enable ? (high  >= period1_line2) : true )  and (period2_enable ? (high  >= period2_line2) : true )

// close 上穿 3
crossover3 = ta.crossover(high, currect_line3) and enable3 and (period1_enable ? (high  >= period1_line3) : true )  and (period2_enable ? (high  >= period2_line3) : true ) 

// close 上穿 4 
crossover4 = ta.crossover(high, currect_line4) and enable4 and (period1_enable ? (high  >= period1_line4) : true )  and (period2_enable ? (high  >= period2_line4) : true ) 


// close 下穿 6
crossunder6 = ta.crossunder(low, currect_line6) and enable6 and (period1_enable ? (low  >= period1_line6) : true )  and (period2_enable ? (low  >= period2_line6) : true )  

// close 下穿 7
crossunder7 = ta.crossunder(low, currect_line7) and enable7 and (period1_enable ? (low  >= period1_line7) : true ) and (period2_enable ? (low  >= period2_line7) : true ) 

// close 下穿 8
crossunder8 = ta.crossunder(low, currect_line8) and enable8 and (period1_enable ? (low  >= period1_line8) : true ) and (period2_enable ? (low  >= period2_line8) : true ) 

// close 下穿 9
// crossunder9 = ta.crossunder(low, currect_line9) and enable9 and (period1_enable ? (low  >= period1_line9) : true ) and (period2_enable ? (low  >= period2_line9) : true ) 


// 退出条件

// 低于 6 7 8 9
// down6 = low < currect_line6
// down7 = low < currect_line7
// down8 = low < currect_line8
// down9 = low < currect_line9


// // 高于 1 2 3 4
// up1 = high > currect_line1
// up2 = high > currect_line2
// up3 = high > currect_line3
// up4 = high > currect_line4



// 做多
longcond = crossunder6 or crossunder7 or crossunder8 //or crossunder9

// 做空
shortcond =  crossover2 or crossover3 or crossover4 // or crossover1


bgcolor(longcond ? color.new(color.green, 80) : na)
bgcolor(shortcond ? color.new(color.red, 80) : na)

// 综合进场信号, 固定盈亏比
alertcondition(longcond, title='longcond', message="longcond")
alertcondition(shortcond, title='shortcond', message='shortcond')



// 进场信号 要求 上穿 or 下穿
// alertcondition(crossover1, title='short1', message="exitlong")
alertcondition(crossover2, title='short2', message='exitshort')
alertcondition(crossover3, title='short3', message="longcond")
alertcondition(crossover4, title='short4', message='shortcond')


alertcondition(crossunder6, title='long6', message="long6")
alertcondition(crossunder7, title='long7', message='long7')
alertcondition(crossunder8, title='long8', message="long8")
// alertcondition(crossunder9, title='long9', message='long9')



// 出场信号, 仅 高于 or 低于
alertcondition(low < currect_line6, title='down6', message="down6")
alertcondition(low < currect_line7, title='down7', message='down7')
alertcondition(low < currect_line8, title='down8', message="down8")
alertcondition(low < currect_line9, title='down9', message='down9')


alertcondition(high > currect_line1, title='up1', message="up1")
alertcondition(high > currect_line2, title='up2', message='up2')
alertcondition(high > currect_line3, title='up3', message="up3")
alertcondition(high > currect_line4, title='up4', message='up4')












// grp_STRAT   = "Strategy settings"
// timeInput   = input.time(timestamp("1 Aug 2024 00:00 +0000"), title="Start date", group=grp_STRAT)


// profit = input.float(0.0166, title="止盈", group=grp_STRAT)
// lost =   input.float(0.02, title="止损", group=grp_STRAT)

// timePeriod  = time >= timeInput
// notInTrade  = strategy.position_size <= 0
// if(longcond and timePeriod)
//     strategy.entry("Long", strategy.long)
//     strategy.exit("Exit long", "Long", limit = close * (1 + profit), stop = close * (1 - lost))
// if(shortcond and timePeriod)
//     strategy.entry("Short", strategy.short)
//     strategy.exit("Exit short", "Short", limit = close * (1 - profit), stop = close * (1 + lost))
